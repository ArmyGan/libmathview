
=========
NAMESPACE
=========

http://helm.cs.unibo.it/2003/BoxML

=========
ELEMENTS
=========

box			

root element for BoxML markup

space			
	width		length		default=0pt
	height		length		default=0pt
	depth		length		default=0pt

renders an empty box of specified size

ink
	width		length		default=0pt
	height		length		default=0pt
	depth		length		default=0pt
	color		color

renders a solid box of specified color and size

text
	color		color		default=inherited
	background	color		default=inherited
	size		length		default=inherited
	width		length | auto	default=auto

renders the text contained by the element with the specified color and
background

layout

	width		length
	height		length
	depth		length

renders a fixed layout box; each child must be an at element

at
	x		length
	y		length

renders an element at the specified coordinates. This element is valid
within a layout element only. The coordinates are relative to the
container element's origin.

decor
	type		{box | top | bottom | left | right | horizontalstrike | verticalstrike | baselinestrike | ...}
					default=box
	color		color | transparent
	thickness	length		default=1px

renders a decoration around an element. The decoration is determined
by the type attribute which consists of a nonempty list of keywords
representing various entities to be drawn around or overlapped to the
element

action
	actiontype	string		default=toggle
	selection	unsigned integer	default=1

represents a number of alternative renderings. actiontype is the type
of action; currently only toggle is supported. selection is the
1-based index of the child to be rendered by default

h
	spacing		{length}+	default=0pt
			
renders its children aligned on their baseline. The first child is the
leftmost one, the last child the rightmost one.

v	
	enter		integer		default=1
	exit		integer		default=-1
	spacing		{length}+	default=0pt
	indent		{length | left | center | right}+	default=left
	minlinespacing	length		default=1em

renders its children vertically. The first child is the topmost one,
the last child is the bottommost one. The entry and exit baseline of
the whole element can be controlled by the two corresponding
attributes. Their default value are 1 and -1 respectively, meaning
that the entry baseline is taken to be the one of the first child, and
that the exit baseline is taken to be the one of the last child

hv	
	spacing		{length}+	default=0pt
	indent		{length | left | center | right}+	default=left
	minlinespacing	length		default=1em

behaves like h box if the children fit the available width, otherwise
it behaves like the v box. In the latter case indent is added to the
indentation of all children except the first one.

hov
	spacing		{length}+	default=0pt
	indent		{length | left | center | right}+	default=left
	minlinespacing	length		default=1em

renders its children horizontally as long as it is possible. Whenever
a child element does not fit the current line it starts a new line
with the indentation specified for that children

obj

renders a fragment of MathML embedded in BoxML

=========
TODO
=========

allow "fill" value for spacing attributes
allow "newline" value for spacing attributes
allow "fill" with a minimum value for spacing attributes
allow "auto" value for width, height, depth of layout element
add "lastindent" attribute for hov element
